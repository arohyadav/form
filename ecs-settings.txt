task definition: react-node-alb
cluster: rgstech
service name: rgstechservice33
name of the application load balancer: reactnodealb 
target group: reactndetg
this is a setup with pool .
The output form data was successfully getting inserted in aws rds postgres


While creating task definiton. Make both client and server esssential containers.
Add the correct repository ecr links to the containers. 
In client listen  port 80 ( Host port 80)
In server the container host port will be 5000.
Add the env variables for postgres accordingly. (PGUSER, PGHOST, PGDATABASE , PGPASSWORD , PGPORT)
The aws alb acts as a load balancer between containers and the nginx serves the react files to the user and 
routes to the backend application '/api/consulting' & '/api/contact' routes accordingly based on the setting of nginx.conf

this setup consists of two docker files . One in client one in server.
The client docker file consists of two images nodejs and nginx
The server docker file consists of one image nodejs and is running on port 5000
The nginx.conf file is stored in client folder and the docker container is running on port 

How was this implemented.

Changes in nginx.conf file and using only one nginx with react .
Creating a new Aws load balancer at EC2  Dashboard and adding listeners at port 80 and port 5000. 
Creating a new target group. Choosing IP Address 
Properly configuring /api route according to the website.
Adding RDS security group , port 5432 to load balancer security group.

All these 